import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, p as onMount, r as config, E as ErrorModal, N as globals, I as create_component, J as claim_component, K as mount_component, y as transition_in, w as transition_out, L as destroy_component, a as space, u as empty, j as claim_space, m as insert_dev, x as check_outros, h as detach_dev, B as group_outros, e as element, t as text, c as claim_element, f as children, g as claim_text, k as attr_dev, l as add_location, n as append_dev, F as listen_dev, q as set_data_dev, o as noop } from './client.1c7e7f00.js';
import { S as Success, L as Loader } from './Loader.aad79e8e.js';

/* src/routes/earn/invite.svelte generated by Svelte v3.31.2 */

const { console: console_1 } = globals;
const file = "src/routes/earn/invite.svelte";

// (38:0) {:else}
function create_else_block(ctx) {
	let div12;
	let div11;
	let div10;
	let div0;
	let h2;
	let t0;
	let t1;
	let p0;
	let t2;
	let t3;
	let div5;
	let h30;
	let t4;
	let t5;
	let dl;
	let div2;
	let div1;
	let dt0;
	let t6;
	let t7;
	let dd0;
	let t8_value = /*info*/ ctx[2].referrals + "";
	let t8;
	let t9;
	let div4;
	let div3;
	let dt1;
	let t10;
	let t11;
	let dd1;
	let t12;
	let t13_value = /*info*/ ctx[2].referralEarned.toLocaleString() + "";
	let t13;
	let t14;
	let div9;
	let div8;
	let h31;
	let t15;
	let t16;
	let div6;
	let p1;
	let t17;
	let t18;
	let form;
	let div7;
	let label;
	let t19;
	let t20;
	let input;
	let input_placeholder_value;
	let t21;
	let button;
	let t22;
	let t23;
	let img;
	let img_src_value;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div12 = element("div");
			div11 = element("div");
			div10 = element("div");
			div0 = element("div");
			h2 = element("h2");
			t0 = text("Invite Friends");
			t1 = space();
			p0 = element("p");
			t2 = text("Invite your friends and receive a percentage of their earnings for\r\n            life.");
			t3 = space();
			div5 = element("div");
			h30 = element("h3");
			t4 = text("Stats");
			t5 = space();
			dl = element("dl");
			div2 = element("div");
			div1 = element("div");
			dt0 = element("dt");
			t6 = text("Referred Users");
			t7 = space();
			dd0 = element("dd");
			t8 = text(t8_value);
			t9 = space();
			div4 = element("div");
			div3 = element("div");
			dt1 = element("dt");
			t10 = text("Earnings");
			t11 = space();
			dd1 = element("dd");
			t12 = text("R$");
			t13 = text(t13_value);
			t14 = space();
			div9 = element("div");
			div8 = element("div");
			h31 = element("h3");
			t15 = text("Get your referral link.");
			t16 = space();
			div6 = element("div");
			p1 = element("p");
			t17 = text("Make sure your friends sign up using this link.");
			t18 = space();
			form = element("form");
			div7 = element("div");
			label = element("label");
			t19 = text("Link");
			t20 = space();
			input = element("input");
			t21 = space();
			button = element("button");
			t22 = text("Copy");
			t23 = space();
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div12 = claim_element(nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div0 = claim_element(div10_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "Invite Friends");
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			p0 = claim_element(div0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, "Invite your friends and receive a percentage of their earnings for\r\n            life.");
			p0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div10_nodes);
			div5 = claim_element(div10_nodes, "DIV", {});
			var div5_nodes = children(div5);
			h30 = claim_element(div5_nodes, "H3", { class: true });
			var h30_nodes = children(h30);
			t4 = claim_text(h30_nodes, "Stats");
			h30_nodes.forEach(detach_dev);
			t5 = claim_space(div5_nodes);
			dl = claim_element(div5_nodes, "DL", { class: true });
			var dl_nodes = children(dl);
			div2 = claim_element(dl_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			dt0 = claim_element(div1_nodes, "DT", { class: true });
			var dt0_nodes = children(dt0);
			t6 = claim_text(dt0_nodes, "Referred Users");
			dt0_nodes.forEach(detach_dev);
			t7 = claim_space(div1_nodes);
			dd0 = claim_element(div1_nodes, "DD", { class: true });
			var dd0_nodes = children(dd0);
			t8 = claim_text(dd0_nodes, t8_value);
			dd0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t9 = claim_space(div2_nodes);
			div2_nodes.forEach(detach_dev);
			div4 = claim_element(dl_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			dt1 = claim_element(div3_nodes, "DT", { class: true });
			var dt1_nodes = children(dt1);
			t10 = claim_text(dt1_nodes, "Earnings");
			dt1_nodes.forEach(detach_dev);
			t11 = claim_space(div3_nodes);
			dd1 = claim_element(div3_nodes, "DD", { class: true });
			var dd1_nodes = children(dd1);
			t12 = claim_text(dd1_nodes, "R$");
			t13 = claim_text(dd1_nodes, t13_value);
			dd1_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			dl_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t14 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			h31 = claim_element(div8_nodes, "H3", { class: true });
			var h31_nodes = children(h31);
			t15 = claim_text(h31_nodes, "Get your referral link.");
			h31_nodes.forEach(detach_dev);
			t16 = claim_space(div8_nodes);
			div6 = claim_element(div8_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			p1 = claim_element(div6_nodes, "P", {});
			var p1_nodes = children(p1);
			t17 = claim_text(p1_nodes, "Make sure your friends sign up using this link.");
			p1_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t18 = claim_space(div8_nodes);
			form = claim_element(div8_nodes, "FORM", { class: true });
			var form_nodes = children(form);
			div7 = claim_element(form_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			label = claim_element(div7_nodes, "LABEL", { for: true, class: true });
			var label_nodes = children(label);
			t19 = claim_text(label_nodes, "Link");
			label_nodes.forEach(detach_dev);
			t20 = claim_space(div7_nodes);

			input = claim_element(div7_nodes, "INPUT", {
				type: true,
				name: true,
				id: true,
				class: true,
				placeholder: true
			});

			div7_nodes.forEach(detach_dev);
			t21 = claim_space(form_nodes);
			button = claim_element(form_nodes, "BUTTON", { type: true, class: true });
			var button_nodes = children(button);
			t22 = claim_text(button_nodes, "Copy");
			button_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t23 = claim_space(div9_nodes);
			img = claim_element(div9_nodes, "IMG", { src: true, alt: true, class: true });
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h2, "class", "text-3xl font-extrabold tracking-tight sm:text-4xl");
			add_location(h2, file, 43, 10, 1178);
			attr_dev(p0, "class", "text-xl text-gray-500");
			add_location(p0, file, 46, 10, 1298);
			attr_dev(div0, "class", "space-y-5 sm:space-y-4 md:max-w-xl lg:max-w-3xl xl:max-w-none");
			add_location(div0, file, 41, 8, 1080);
			attr_dev(h30, "class", "text-2xl leading-6 font-medium text-gray-900");
			add_location(h30, file, 53, 10, 1491);
			attr_dev(dt0, "class", "text-sm font-medium text-gray-500 truncate");
			add_location(dt0, file, 57, 16, 1759);
			attr_dev(dd0, "class", "mt-1 text-3xl font-semibold text-gray-900");
			add_location(dd0, file, 60, 16, 1889);
			attr_dev(div1, "class", "px-4 py-5 sm:p-6");
			add_location(div1, file, 56, 14, 1711);
			attr_dev(div2, "class", "bg-white overflow-hidden shadow rounded-lg");
			add_location(div2, file, 55, 12, 1639);
			attr_dev(dt1, "class", "text-sm font-medium text-gray-500 truncate");
			add_location(dt1, file, 68, 16, 2180);
			attr_dev(dd1, "class", "mt-1 text-3xl font-semibold text-gray-900");
			add_location(dd1, file, 71, 16, 2304);
			attr_dev(div3, "class", "px-4 py-5 sm:p-6");
			add_location(div3, file, 67, 14, 2132);
			attr_dev(div4, "class", "bg-white overflow-hidden shadow rounded-lg");
			add_location(div4, file, 66, 12, 2060);
			attr_dev(dl, "class", "mt-5 grid grid-cols-1 gap-5 sm:grid-cols-2");
			add_location(dl, file, 54, 10, 1570);
			add_location(div5, file, 52, 8, 1474);
			attr_dev(h31, "class", "text-lg leading-6 font-medium text-gray-900");
			add_location(h31, file, 83, 12, 2694);
			add_location(p1, file, 87, 14, 2887);
			attr_dev(div6, "class", "mt-2 max-w-xl text-sm text-gray-500");
			add_location(div6, file, 86, 12, 2822);
			attr_dev(label, "for", "link");
			attr_dev(label, "class", "sr-only");
			add_location(label, file, 91, 16, 3081);
			attr_dev(input, "type", "text");
			attr_dev(input, "name", "link");
			attr_dev(input, "id", "link");
			attr_dev(input, "class", "shadow-sm focus:ring-blue-500 focus:border-blue-500\r\n                  block w-full sm:text-sm border-gray-300 rounded-md");
			attr_dev(input, "placeholder", input_placeholder_value = "" + (config.scheme + "://" + config.domain + "/r/" + /*info*/ ctx[2].username));
			add_location(input, file, 92, 16, 3145);
			attr_dev(div7, "class", "max-w-xs w-full");
			add_location(div7, file, 90, 14, 3034);
			attr_dev(button, "type", "submit");
			attr_dev(button, "class", "mt-3 w-full inline-flex items-center justify-center px-4\r\n                py-2 border border-transparent shadow-sm font-medium rounded-md\r\n                text-white bg-blue-600 hover:bg-blue-700 focus:outline-none\r\n                focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0\r\n                sm:ml-3 sm:w-auto sm:text-sm");
			add_location(button, file, 100, 14, 3517);
			attr_dev(form, "class", "mt-5 sm:flex sm:items-center");
			add_location(form, file, 89, 12, 2975);
			attr_dev(div8, "class", "px-4 py-5 sm:p-6");
			add_location(div8, file, 82, 10, 2650);
			if (img.src !== (img_src_value = "http://placehold.it/600x150")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "");
			attr_dev(img, "class", "hidden lg:block");
			add_location(img, file, 117, 10, 4235);
			attr_dev(div9, "class", "bg-white shadow sm:rounded-lg flex lg:justify-end space-x-16\r\n          lg:space-x-32");
			add_location(div9, file, 79, 8, 2528);
			attr_dev(div10, "class", "space-y-12");
			add_location(div10, file, 40, 6, 1046);
			attr_dev(div11, "class", "mx-auto py-12 px-4 max-w-7xl sm:px-6 lg:px-8 lg:py-24");
			add_location(div11, file, 39, 4, 971);
			attr_dev(div12, "class", "bg-white");
			add_location(div12, file, 38, 2, 943);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div12, anchor);
			append_dev(div12, div11);
			append_dev(div11, div10);
			append_dev(div10, div0);
			append_dev(div0, h2);
			append_dev(h2, t0);
			append_dev(div0, t1);
			append_dev(div0, p0);
			append_dev(p0, t2);
			append_dev(div10, t3);
			append_dev(div10, div5);
			append_dev(div5, h30);
			append_dev(h30, t4);
			append_dev(div5, t5);
			append_dev(div5, dl);
			append_dev(dl, div2);
			append_dev(div2, div1);
			append_dev(div1, dt0);
			append_dev(dt0, t6);
			append_dev(div1, t7);
			append_dev(div1, dd0);
			append_dev(dd0, t8);
			append_dev(div2, t9);
			append_dev(dl, div4);
			append_dev(div4, div3);
			append_dev(div3, dt1);
			append_dev(dt1, t10);
			append_dev(div3, t11);
			append_dev(div3, dd1);
			append_dev(dd1, t12);
			append_dev(dd1, t13);
			append_dev(div10, t14);
			append_dev(div10, div9);
			append_dev(div9, div8);
			append_dev(div8, h31);
			append_dev(h31, t15);
			append_dev(div8, t16);
			append_dev(div8, div6);
			append_dev(div6, p1);
			append_dev(p1, t17);
			append_dev(div8, t18);
			append_dev(div8, form);
			append_dev(form, div7);
			append_dev(div7, label);
			append_dev(label, t19);
			append_dev(div7, t20);
			append_dev(div7, input);
			append_dev(form, t21);
			append_dev(form, button);
			append_dev(button, t22);
			append_dev(div9, t23);
			append_dev(div9, img);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*click_handler*/ ctx[3], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*info*/ 4 && t8_value !== (t8_value = /*info*/ ctx[2].referrals + "")) set_data_dev(t8, t8_value);
			if (dirty & /*info*/ 4 && t13_value !== (t13_value = /*info*/ ctx[2].referralEarned.toLocaleString() + "")) set_data_dev(t13, t13_value);

			if (dirty & /*info*/ 4 && input_placeholder_value !== (input_placeholder_value = "" + (config.scheme + "://" + config.domain + "/r/" + /*info*/ ctx[2].username))) {
				attr_dev(input, "placeholder", input_placeholder_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div12);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(38:0) {:else}",
		ctx
	});

	return block;
}

// (36:0) {#if !info}
function create_if_block_2(ctx) {
	let loader;
	let current;
	loader = new Loader({ $$inline: true });

	const block = {
		c: function create() {
			create_component(loader.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(loader.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(loader, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(loader.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(loader.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(loader, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(36:0) {#if !info}",
		ctx
	});

	return block;
}

// (128:0) {#if error}
function create_if_block_1(ctx) {
	let errormodal;
	let current;

	errormodal = new ErrorModal({
			props: { error: /*error*/ ctx[0] },
			$$inline: true
		});

	errormodal.$on("close", /*close_handler*/ ctx[4]);

	const block = {
		c: function create() {
			create_component(errormodal.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(errormodal.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(errormodal, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const errormodal_changes = {};
			if (dirty & /*error*/ 1) errormodal_changes.error = /*error*/ ctx[0];
			errormodal.$set(errormodal_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(errormodal.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(errormodal.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(errormodal, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(128:0) {#if error}",
		ctx
	});

	return block;
}

// (136:0) {#if successMessage}
function create_if_block(ctx) {
	let success;
	let current;

	success = new Success({
			props: { message: /*successMessage*/ ctx[1] },
			$$inline: true
		});

	success.$on("close", /*close_handler_1*/ ctx[5]);

	const block = {
		c: function create() {
			create_component(success.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(success.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(success, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const success_changes = {};
			if (dirty & /*successMessage*/ 2) success_changes.message = /*successMessage*/ ctx[1];
			success.$set(success_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(success.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(success.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(success, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(136:0) {#if successMessage}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let current_block_type_index;
	let if_block0;
	let t0;
	let t1;
	let if_block2_anchor;
	let current;
	const if_block_creators = [create_if_block_2, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (!/*info*/ ctx[2]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
	let if_block1 = /*error*/ ctx[0] && create_if_block_1(ctx);
	let if_block2 = /*successMessage*/ ctx[1] && create_if_block(ctx);

	const block = {
		c: function create() {
			if_block0.c();
			t0 = space();
			if (if_block1) if_block1.c();
			t1 = space();
			if (if_block2) if_block2.c();
			if_block2_anchor = empty();
		},
		l: function claim(nodes) {
			if_block0.l(nodes);
			t0 = claim_space(nodes);
			if (if_block1) if_block1.l(nodes);
			t1 = claim_space(nodes);
			if (if_block2) if_block2.l(nodes);
			if_block2_anchor = empty();
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, t0, anchor);
			if (if_block1) if_block1.m(target, anchor);
			insert_dev(target, t1, anchor);
			if (if_block2) if_block2.m(target, anchor);
			insert_dev(target, if_block2_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block0 = if_blocks[current_block_type_index];

				if (!if_block0) {
					if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block0.c();
				} else {
					if_block0.p(ctx, dirty);
				}

				transition_in(if_block0, 1);
				if_block0.m(t0.parentNode, t0);
			}

			if (/*error*/ ctx[0]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*error*/ 1) {
						transition_in(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(t1.parentNode, t1);
				}
			} else if (if_block1) {
				group_outros();

				transition_out(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				check_outros();
			}

			if (/*successMessage*/ ctx[1]) {
				if (if_block2) {
					if_block2.p(ctx, dirty);

					if (dirty & /*successMessage*/ 2) {
						transition_in(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block(ctx);
					if_block2.c();
					transition_in(if_block2, 1);
					if_block2.m(if_block2_anchor.parentNode, if_block2_anchor);
				}
			} else if (if_block2) {
				group_outros();

				transition_out(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(if_block1);
			transition_in(if_block2);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block0);
			transition_out(if_block1);
			transition_out(if_block2);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(t0);
			if (if_block1) if_block1.d(detaching);
			if (detaching) detach_dev(t1);
			if (if_block2) if_block2.d(detaching);
			if (detaching) detach_dev(if_block2_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Invite", slots, []);
	let error;
	let successMessage;
	let info;

	onMount(async () => {
		try {
			let result = await fetch(`${config.scheme}://${config.api}/api/v1/user/info`, {
				headers: {
					username: localStorage.getItem("roblox-user")
				}
			});

			let json = await result.json();
			if (json.status == "error") return $$invalidate(0, error = json.error);
			$$invalidate(2, info = json.result);
		} catch(error) {
			console.error(error);
			error = "Failed to load invitation info. Make sure you have an internet connection and try again!";
		}
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Invite> was created with unknown prop '${key}'`);
	});

	const click_handler = () => {
		let linkElement = document.querySelector("#link");
		linkElement.select();
		document.execCommand("copy");
	};

	const close_handler = () => {
		$$invalidate(0, error = null);
	};

	const close_handler_1 = () => {
		$$invalidate(1, successMessage = null);
	};

	$$self.$capture_state = () => ({
		onMount,
		config,
		ErrorModal,
		Success,
		Loader,
		error,
		successMessage,
		info
	});

	$$self.$inject_state = $$props => {
		if ("error" in $$props) $$invalidate(0, error = $$props.error);
		if ("successMessage" in $$props) $$invalidate(1, successMessage = $$props.successMessage);
		if ("info" in $$props) $$invalidate(2, info = $$props.info);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [error, successMessage, info, click_handler, close_handler, close_handler_1];
}

class Invite extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Invite",
			options,
			id: create_fragment.name
		});
	}
}

export default Invite;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
