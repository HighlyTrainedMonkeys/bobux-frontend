import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, p as onMount, r as config, E as ErrorModal, u as empty, m as insert_dev, w as transition_out, x as check_outros, y as transition_in, h as detach_dev, z as select_value, A as validate_each_argument, e as element, a as space, t as text, b as svg_element, c as claim_element, f as children, j as claim_space, g as claim_text, k as attr_dev, l as add_location, n as append_dev, o as noop, B as group_outros, C as add_render_callback, D as select_option, F as listen_dev, G as destroy_each, H as run_all, I as create_component, J as claim_component, K as mount_component, L as destroy_component } from './client.9085a597.js';
import { S as Success, L as Loader } from './Loader.8acab25c.js';

/* src/routes/earn/offerwalls.svelte generated by Svelte v3.31.2 */
const file = "src/routes/earn/offerwalls.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[11] = list[i];
	return child_ctx;
}

// (45:0) {:else}
function create_else_block(ctx) {
	let div8;
	let div0;
	let label;
	let t0;
	let t1;
	let select;
	let option0;
	let t2;
	let option1;
	let t3;
	let option2;
	let t4;
	let option3;
	let t5;
	let t6;
	let div6;
	let div5;
	let nav;
	let div1;
	let t7;
	let div1_class_value;
	let t8;
	let div2;
	let t9;
	let div2_class_value;
	let t10;
	let div3;
	let t11;
	let div3_class_value;
	let t12;
	let div4;
	let t13;
	let div4_class_value;
	let t14;
	let div7;
	let mounted;
	let dispose;
	let each_value = /*cache*/ ctx[2].find(func).offers;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div8 = element("div");
			div0 = element("div");
			label = element("label");
			t0 = text("Select an offerwall");
			t1 = space();
			select = element("select");
			option0 = element("option");
			t2 = text("Offertoro");
			option1 = element("option");
			t3 = text("AdGate");
			option2 = element("option");
			t4 = text("AyeTStudios");
			option3 = element("option");
			t5 = text("KiwiWall");
			t6 = space();
			div6 = element("div");
			div5 = element("div");
			nav = element("nav");
			div1 = element("div");
			t7 = text("Offertoro");
			t8 = space();
			div2 = element("div");
			t9 = text("AdGate");
			t10 = space();
			div3 = element("div");
			t11 = text("AyeTStudios");
			t12 = space();
			div4 = element("div");
			t13 = text("KiwiWall");
			t14 = space();
			div7 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div8 = claim_element(nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div0 = claim_element(div8_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			label = claim_element(div0_nodes, "LABEL", { for: true, class: true });
			var label_nodes = children(label);
			t0 = claim_text(label_nodes, "Select an offerwall");
			label_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			select = claim_element(div0_nodes, "SELECT", { id: true, name: true, class: true });
			var select_nodes = children(select);
			option0 = claim_element(select_nodes, "OPTION", { selected: true, value: true });
			var option0_nodes = children(option0);
			t2 = claim_text(option0_nodes, "Offertoro");
			option0_nodes.forEach(detach_dev);
			option1 = claim_element(select_nodes, "OPTION", { value: true });
			var option1_nodes = children(option1);
			t3 = claim_text(option1_nodes, "AdGate");
			option1_nodes.forEach(detach_dev);
			option2 = claim_element(select_nodes, "OPTION", { value: true });
			var option2_nodes = children(option2);
			t4 = claim_text(option2_nodes, "AyeTStudios");
			option2_nodes.forEach(detach_dev);
			option3 = claim_element(select_nodes, "OPTION", { value: true });
			var option3_nodes = children(option3);
			t5 = claim_text(option3_nodes, "KiwiWall");
			option3_nodes.forEach(detach_dev);
			select_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t6 = claim_space(div8_nodes);
			div6 = claim_element(div8_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			nav = claim_element(div5_nodes, "NAV", { class: true, "aria-label": true });
			var nav_nodes = children(nav);
			div1 = claim_element(nav_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t7 = claim_text(div1_nodes, "Offertoro");
			div1_nodes.forEach(detach_dev);
			t8 = claim_space(nav_nodes);
			div2 = claim_element(nav_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			t9 = claim_text(div2_nodes, "AdGate");
			div2_nodes.forEach(detach_dev);
			t10 = claim_space(nav_nodes);
			div3 = claim_element(nav_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			t11 = claim_text(div3_nodes, "AyeTStudios");
			div3_nodes.forEach(detach_dev);
			t12 = claim_space(nav_nodes);
			div4 = claim_element(nav_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			t13 = claim_text(div4_nodes, "KiwiWall");
			div4_nodes.forEach(detach_dev);
			nav_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t14 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div7_nodes);
			}

			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(label, "for", "tabs");
			attr_dev(label, "class", "sr-only");
			add_location(label, file, 47, 6, 1241);
			option0.selected = true;
			option0.__value = "Offertoro";
			option0.value = option0.__value;
			add_location(option0, file, 54, 8, 1511);
			option1.__value = "AdGate";
			option1.value = option1.__value;
			add_location(option1, file, 55, 8, 1556);
			option2.__value = "AyeTStudios";
			option2.value = option2.__value;
			add_location(option2, file, 56, 8, 1589);
			option3.__value = "KiwiWall";
			option3.value = option3.__value;
			add_location(option3, file, 57, 8, 1627);
			attr_dev(select, "id", "tabs");
			attr_dev(select, "name", "tabs");
			attr_dev(select, "class", "block w-full focus:ring-indigo-500 focus:border-indigo-500\r\n        border-gray-300 rounded-md");
			if (/*selected*/ ctx[1] === void 0) add_render_callback(() => /*select_change_handler*/ ctx[4].call(select));
			add_location(select, file, 48, 6, 1310);
			attr_dev(div0, "class", "sm:hidden");
			add_location(div0, file, 46, 4, 1210);

			attr_dev(div1, "class", div1_class_value = "" + ((/*selected*/ ctx[1].toLowerCase() == "offertoro"
			? "border-indigo-500 text-indigo-600"
			: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300") + "\r\n            cursor-pointer w-1/4 py-4 px-1 text-center border-b-2 font-medium\r\n            text-sm"));

			add_location(div1, file, 63, 10, 1827);

			attr_dev(div2, "class", div2_class_value = "" + ((/*selected*/ ctx[1].toLowerCase() == "adgate"
			? "border-indigo-500 text-indigo-600"
			: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300") + "\r\n            cursor-pointer w-1/4 py-4 px-1 text-center border-b-2 font-medium\r\n            text-sm"));

			add_location(div2, file, 72, 10, 2249);

			attr_dev(div3, "class", div3_class_value = "" + ((/*selected*/ ctx[1].toLowerCase() == "ayetstudios"
			? "border-indigo-500 text-indigo-600"
			: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300") + "\r\n            cursor-pointer w-1/4 py-4 px-1 text-center border-b-2 font-medium\r\n            text-sm"));

			add_location(div3, file, 81, 10, 2662);

			attr_dev(div4, "class", div4_class_value = "" + ((/*selected*/ ctx[1].toLowerCase() == "kiwiwall"
			? "border-indigo-500 text-indigo-600"
			: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300") + "\r\n            cursor-pointer w-1/4 py-4 px-1 text-center border-b-2 font-medium\r\n            text-sm"));

			add_location(div4, file, 90, 10, 3090);
			attr_dev(nav, "class", "-mb-px flex");
			attr_dev(nav, "aria-label", "Tabs");
			add_location(nav, file, 62, 8, 1772);
			attr_dev(div5, "class", "border-b border-gray-200");
			add_location(div5, file, 61, 6, 1724);
			attr_dev(div6, "class", "hidden sm:block");
			add_location(div6, file, 60, 4, 1687);
			attr_dev(div7, "class", "rounded-lg bg-gray-200 overflow-hidden shadow divide-y\r\n      divide-gray-200 sm:divide-y-0 sm:grid sm:grid-cols-2 sm:gap-px mt-8 mb-14");
			add_location(div7, file, 103, 4, 3547);
			attr_dev(div8, "class", "pt-16 mx-4");
			add_location(div8, file, 45, 2, 1180);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div8, anchor);
			append_dev(div8, div0);
			append_dev(div0, label);
			append_dev(label, t0);
			append_dev(div0, t1);
			append_dev(div0, select);
			append_dev(select, option0);
			append_dev(option0, t2);
			append_dev(select, option1);
			append_dev(option1, t3);
			append_dev(select, option2);
			append_dev(option2, t4);
			append_dev(select, option3);
			append_dev(option3, t5);
			select_option(select, /*selected*/ ctx[1]);
			append_dev(div8, t6);
			append_dev(div8, div6);
			append_dev(div6, div5);
			append_dev(div5, nav);
			append_dev(nav, div1);
			append_dev(div1, t7);
			append_dev(nav, t8);
			append_dev(nav, div2);
			append_dev(div2, t9);
			append_dev(nav, t10);
			append_dev(nav, div3);
			append_dev(div3, t11);
			append_dev(nav, t12);
			append_dev(nav, div4);
			append_dev(div4, t13);
			append_dev(div8, t14);
			append_dev(div8, div7);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div7, null);
			}

			if (!mounted) {
				dispose = [
					listen_dev(select, "change", /*select_change_handler*/ ctx[4]),
					listen_dev(div1, "click", /*click_handler*/ ctx[5], false, false, false),
					listen_dev(div2, "click", /*click_handler_1*/ ctx[6], false, false, false),
					listen_dev(div3, "click", /*click_handler_2*/ ctx[7], false, false, false),
					listen_dev(div4, "click", /*click_handler_3*/ ctx[8], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*selected*/ 2) {
				select_option(select, /*selected*/ ctx[1]);
			}

			if (dirty & /*selected*/ 2 && div1_class_value !== (div1_class_value = "" + ((/*selected*/ ctx[1].toLowerCase() == "offertoro"
			? "border-indigo-500 text-indigo-600"
			: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300") + "\r\n            cursor-pointer w-1/4 py-4 px-1 text-center border-b-2 font-medium\r\n            text-sm"))) {
				attr_dev(div1, "class", div1_class_value);
			}

			if (dirty & /*selected*/ 2 && div2_class_value !== (div2_class_value = "" + ((/*selected*/ ctx[1].toLowerCase() == "adgate"
			? "border-indigo-500 text-indigo-600"
			: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300") + "\r\n            cursor-pointer w-1/4 py-4 px-1 text-center border-b-2 font-medium\r\n            text-sm"))) {
				attr_dev(div2, "class", div2_class_value);
			}

			if (dirty & /*selected*/ 2 && div3_class_value !== (div3_class_value = "" + ((/*selected*/ ctx[1].toLowerCase() == "ayetstudios"
			? "border-indigo-500 text-indigo-600"
			: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300") + "\r\n            cursor-pointer w-1/4 py-4 px-1 text-center border-b-2 font-medium\r\n            text-sm"))) {
				attr_dev(div3, "class", div3_class_value);
			}

			if (dirty & /*selected*/ 2 && div4_class_value !== (div4_class_value = "" + ((/*selected*/ ctx[1].toLowerCase() == "kiwiwall"
			? "border-indigo-500 text-indigo-600"
			: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300") + "\r\n            cursor-pointer w-1/4 py-4 px-1 text-center border-b-2 font-medium\r\n            text-sm"))) {
				attr_dev(div4, "class", div4_class_value);
			}

			if (dirty & /*cache*/ 4) {
				each_value = /*cache*/ ctx[2].find(func).offers;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div7, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div8);
			destroy_each(each_blocks, detaching);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(45:0) {:else}",
		ctx
	});

	return block;
}

// (43:0) {#if !loaded}
function create_if_block(ctx) {
	let loader;
	let current;
	loader = new Loader({ $$inline: true });

	const block = {
		c: function create() {
			create_component(loader.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(loader.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(loader, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(loader.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(loader.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(loader, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(43:0) {#if !loaded}",
		ctx
	});

	return block;
}

// (108:6) {#each cache.find(c => c.offerwall == 'selected').offers as offer}
function create_each_block(ctx) {
	let div2;
	let div0;
	let img;
	let img_src_value;
	let t0;
	let div1;
	let h3;
	let a;
	let span0;
	let t1;
	let t2_value = /*offer*/ ctx[11].name + "";
	let t2;
	let t3;
	let p0;
	let t4_value = /*offer*/ ctx[11].description + "";
	let t4;
	let t5;
	let p1;
	let t6;
	let b;
	let t7;
	let t8_value = /*offer*/ ctx[11].reward + "";
	let t8;
	let t9;
	let span1;
	let svg;
	let path;
	let t10;

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			img = element("img");
			t0 = space();
			div1 = element("div");
			h3 = element("h3");
			a = element("a");
			span0 = element("span");
			t1 = space();
			t2 = text(t2_value);
			t3 = space();
			p0 = element("p");
			t4 = text(t4_value);
			t5 = space();
			p1 = element("p");
			t6 = text("Reward:\r\n              ");
			b = element("b");
			t7 = text("R$");
			t8 = text(t8_value);
			t9 = space();
			span1 = element("span");
			svg = svg_element("svg");
			path = svg_element("path");
			t10 = space();
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", {});
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h3 = claim_element(div1_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			a = claim_element(h3_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			span0 = claim_element(a_nodes, "SPAN", { class: true, "aria-hidden": true });
			children(span0).forEach(detach_dev);
			t1 = claim_space(a_nodes);
			t2 = claim_text(a_nodes, t2_value);
			a_nodes.forEach(detach_dev);
			h3_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			p0 = claim_element(div1_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t4 = claim_text(p0_nodes, t4_value);
			p0_nodes.forEach(detach_dev);
			t5 = claim_space(div1_nodes);
			p1 = claim_element(div1_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t6 = claim_text(p1_nodes, "Reward:\r\n              ");
			b = claim_element(p1_nodes, "B", { class: true });
			var b_nodes = children(b);
			t7 = claim_text(b_nodes, "R$");
			t8 = claim_text(b_nodes, t8_value);
			b_nodes.forEach(detach_dev);
			p1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t9 = claim_space(div2_nodes);
			span1 = claim_element(div2_nodes, "SPAN", { class: true, "aria-hidden": true });
			var span1_nodes = children(span1);

			svg = claim_element(
				span1_nodes,
				"svg",
				{
					class: true,
					xmlns: true,
					fill: true,
					viewBox: true
				},
				1
			);

			var svg_nodes = children(svg);
			path = claim_element(svg_nodes, "path", { d: true }, 1);
			children(path).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			span1_nodes.forEach(detach_dev);
			t10 = claim_space(div2_nodes);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*offer*/ ctx[11].icon)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "");
			add_location(img, file, 112, 12, 3985);
			add_location(div0, file, 111, 10, 3966);
			attr_dev(span0, "class", "absolute inset-0");
			attr_dev(span0, "aria-hidden", "true");
			add_location(span0, file, 118, 16, 4253);
			attr_dev(a, "href", ctx[11].url);
			attr_dev(a, "class", "focus:outline-none");
			add_location(a, file, 116, 14, 4126);
			attr_dev(h3, "class", "text-lg font-medium");
			add_location(h3, file, 115, 12, 4078);
			attr_dev(p0, "class", "mt-2 text-sm text-gray-500");
			add_location(p0, file, 122, 12, 4388);
			attr_dev(b, "class", "text-green-500");
			add_location(b, file, 125, 14, 4552);
			attr_dev(p1, "class", "mt-2 text-md text-gray-700 font-medium");
			add_location(p1, file, 123, 12, 4463);
			attr_dev(div1, "class", "mt-8");
			add_location(div1, file, 114, 10, 4046);
			attr_dev(path, "d", "M20 4h1a1 1 0 00-1-1v1zm-1 12a1 1 0 102 0h-2zM8 3a1 1 0 000\r\n                2V3zM3.293 19.293a1 1 0 101.414 1.414l-1.414-1.414zM19\r\n                4v12h2V4h-2zm1-1H8v2h12V3zm-.707.293l-16 16 1.414 1.414\r\n                16-16-1.414-1.414z");
			add_location(path, file, 137, 14, 4987);
			attr_dev(svg, "class", "h-6 w-6");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "fill", "currentColor");
			attr_dev(svg, "viewBox", "0 0 24 24");
			add_location(svg, file, 132, 12, 4815);
			attr_dev(span1, "class", "pointer-events-none absolute top-6 right-6 text-gray-300\r\n            group-hover:text-gray-400");
			attr_dev(span1, "aria-hidden", "true");
			add_location(span1, file, 128, 10, 4646);
			attr_dev(div2, "class", "relative group bg-white p-6 focus-within:ring-2\r\n          focus-within:ring-inset focus-within:ring-indigo-500");
			add_location(div2, file, 108, 8, 3818);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			append_dev(div0, img);
			append_dev(div2, t0);
			append_dev(div2, div1);
			append_dev(div1, h3);
			append_dev(h3, a);
			append_dev(a, span0);
			append_dev(a, t1);
			append_dev(a, t2);
			append_dev(div1, t3);
			append_dev(div1, p0);
			append_dev(p0, t4);
			append_dev(div1, t5);
			append_dev(div1, p1);
			append_dev(p1, t6);
			append_dev(p1, b);
			append_dev(b, t7);
			append_dev(b, t8);
			append_dev(div2, t9);
			append_dev(div2, span1);
			append_dev(span1, svg);
			append_dev(svg, path);
			append_dev(div2, t10);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(108:6) {#each cache.find(c => c.offerwall == 'selected').offers as offer}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (!/*loaded*/ ctx[0]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const func = c => c.offerwall == "selected";

function instance($$self, $$props, $$invalidate) {
	let changed;
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Offerwalls", slots, []);
	let loaded = false;
	let error;
	let selected = "offertoro";
	let cache = []; //{offerwall: "offertoro", offers: []}
	let loadOffers;

	onMount(() => {
		//have to define it in here so the compiler doesnt throw stupid errors
		$$invalidate(3, loadOffers = async () => {
			let cached = cache.find(c => c.offerwall == selected);
			if (cached) return;

			let result = await fetch(`${config.scheme}://${config.api}/api/v1/offerwall/${selected}`, {
				headers: {
					username: localStorage.getItem("roblox-user")
				}
			});

			let json = await result.json();
			if (json.status == "error") return error = json.error;
			cache.push({ offerwall: selected, offers: json.result });
			$$invalidate(0, loaded = true);
		});

		loadOffers();
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Offerwalls> was created with unknown prop '${key}'`);
	});

	function select_change_handler() {
		selected = select_value(this);
		$$invalidate(1, selected);
	}

	const click_handler = () => {
		$$invalidate(1, selected = "offertoro");
	};

	const click_handler_1 = () => {
		$$invalidate(1, selected = "adgate");
	};

	const click_handler_2 = () => {
		$$invalidate(1, selected = "ayetstudios");
	};

	const click_handler_3 = () => {
		$$invalidate(1, selected = "kiwiwall");
	};

	$$self.$capture_state = () => ({
		onMount,
		config,
		ErrorModal,
		Success,
		Loader,
		loaded,
		error,
		selected,
		cache,
		loadOffers,
		changed
	});

	$$self.$inject_state = $$props => {
		if ("loaded" in $$props) $$invalidate(0, loaded = $$props.loaded);
		if ("error" in $$props) error = $$props.error;
		if ("selected" in $$props) $$invalidate(1, selected = $$props.selected);
		if ("cache" in $$props) $$invalidate(2, cache = $$props.cache);
		if ("loadOffers" in $$props) $$invalidate(3, loadOffers = $$props.loadOffers);
		if ("changed" in $$props) changed = $$props.changed;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*loadOffers*/ 8) {
			 changed = loadOffers();
		}
	};

	return [
		loaded,
		selected,
		cache,
		loadOffers,
		select_change_handler,
		click_handler,
		click_handler_1,
		click_handler_2,
		click_handler_3
	];
}

class Offerwalls extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Offerwalls",
			options,
			id: create_fragment.name
		});
	}
}

export default Offerwalls;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
